{"ast":null,"code":"var _jsxFileName = \"/home/hamza/Desktop/MERN/React/weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, setState } from \"react\";\nimport WeatherDay from \"./components/WeatherDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const LOCATION_KEY = \"217943_PC\";\n  const API_KEY = \"KmwaoZaAqRhBNTTE8UoFIo4EqSavfDGu \";\n\n  const fixNum = num => {\n    let strNum = num + \"\";\n    const numLength = strNum.length;\n\n    if (length === 1) {\n      return \"0\" + num;\n    } else {\n      return num;\n    }\n  };\n\n  const [fiveDays, setfiveDays] = useState();\n  useEffect(() => {\n    fetch(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/locationKey=${LOCATION_KEY}?apikey=${API_KEY}`).then(res => res.json()).then(res => setfiveDays(res.DailyForecasts.map(fi => {\n      return {\n        date: fi.Date,\n        icon: fi.Day.Icon,\n        status: fi.Day.IconPhrase,\n        max: fi.Temperature.Maximum.Value,\n        min: fi.Temperature.Minimum.Value\n      };\n    })));\n  }, []);\n  useEffect(() => {\n    console.log(fiveDays);\n  }, [fiveDays]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"App\",\n      children: \"By the Name Of Allah\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), !!fiveDays && fiveDays.map((f, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WeatherDay, {\n        min: f.min,\n        max: f.max,\n        date: f.date,\n        icon: f.icon,\n        status: f.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n};\n\n_s(App, \"BZFUJREw+HGUCK6BH2SC4HgtWPM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hamza/Desktop/MERN/React/weather/src/App.js"],"names":["useEffect","useState","setState","WeatherDay","App","LOCATION_KEY","API_KEY","fixNum","num","strNum","numLength","length","fiveDays","setfiveDays","fetch","then","res","json","DailyForecasts","map","fi","date","Date","icon","Day","Icon","status","IconPhrase","max","Temperature","Maximum","Value","min","Minimum","console","log","f","index"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,YAAY,GAAG,WAArB;AACA,QAAMC,OAAO,GAAG,mCAAhB;;AAEA,QAAMC,MAAM,GAAIC,GAAD,IAAS;AACtB,QAAIC,MAAM,GAAGD,GAAG,GAAG,EAAnB;AACA,UAAME,SAAS,GAAGD,MAAM,CAACE,MAAzB;;AACA,QAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,aAAO,MAAMH,GAAb;AACD,KAFD,MAEO;AACL,aAAOA,GAAP;AACD;AACF,GARD;;AASA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CACF,0EAAyET,YAAa,WAAUC,OAAQ,EADtG,CAAL,CAGGS,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISC,GAAD,IACJH,WAAW,CACTG,GAAG,CAACE,cAAJ,CAAmBC,GAAnB,CAAwBC,EAAD,IAAQ;AAC7B,aAAO;AACLC,QAAAA,IAAI,EAAED,EAAE,CAACE,IADJ;AAELC,QAAAA,IAAI,EAAEH,EAAE,CAACI,GAAH,CAAOC,IAFR;AAGLC,QAAAA,MAAM,EAAEN,EAAE,CAACI,GAAH,CAAOG,UAHV;AAILC,QAAAA,GAAG,EAAER,EAAE,CAACS,WAAH,CAAeC,OAAf,CAAuBC,KAJvB;AAKLC,QAAAA,GAAG,EAAEZ,EAAE,CAACS,WAAH,CAAeI,OAAf,CAAuBF;AALvB,OAAP;AAOD,KARD,CADS,CALf;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA/B,EAAAA,SAAS,CAAC,MAAM;AACdkC,IAAAA,OAAO,CAACC,GAAR,CAAYvB,QAAZ;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAAC,CAACA,QAAF,IACCA,QAAQ,CAACO,GAAT,CAAa,CAACiB,CAAD,EAAIC,KAAJ,kBACX;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,GAAG,EAAED,CAAC,CAACJ,GADT;AAEE,QAAA,GAAG,EAAEI,CAAC,CAACR,GAFT;AAGE,QAAA,IAAI,EAAEQ,CAAC,CAACf,IAHV;AAIE,QAAA,IAAI,EAAEe,CAAC,CAACb,IAJV;AAKE,QAAA,MAAM,EAAEa,CAAC,CAACV;AALZ;AAAA;AAAA;AAAA;AAAA;AADF,OAAUW,KAAV;AAAA;AAAA;AAAA;AAAA,YADF,CAHJ;AAAA,kBADF;AAiBD,CAvDD;;GAAMjC,G;;KAAAA,G;AAyDN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState, setState } from \"react\";\nimport WeatherDay from \"./components/WeatherDay\";\n\nconst App = () => {\n  const LOCATION_KEY = \"217943_PC\";\n  const API_KEY = \"KmwaoZaAqRhBNTTE8UoFIo4EqSavfDGu \";\n\n  const fixNum = (num) => {\n    let strNum = num + \"\";\n    const numLength = strNum.length;\n    if (length === 1) {\n      return \"0\" + num;\n    } else {\n      return num;\n    }\n  };\n  const [fiveDays, setfiveDays] = useState();\n  useEffect(() => {\n    fetch(\n      `http://dataservice.accuweather.com/forecasts/v1/daily/5day/locationKey=${LOCATION_KEY}?apikey=${API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((res) =>\n        setfiveDays(\n          res.DailyForecasts.map((fi) => {\n            return {\n              date: fi.Date,\n              icon: fi.Day.Icon,\n              status: fi.Day.IconPhrase,\n              max: fi.Temperature.Maximum.Value,\n              min: fi.Temperature.Minimum.Value,\n            };\n          })\n        )\n      );\n  }, []);\n\n  useEffect(() => {\n    console.log(fiveDays);\n  }, [fiveDays]);\n\n  return (\n    <>\n      <h1 className=\"App\">By the Name Of Allah</h1>\n      {!!fiveDays &&\n        fiveDays.map((f, index) => (\n          <div key={index}>\n            <WeatherDay\n              min={f.min}\n              max={f.max}\n              date={f.date}\n              icon={f.icon}\n              status={f.status}\n            />\n          </div>\n        ))}\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}