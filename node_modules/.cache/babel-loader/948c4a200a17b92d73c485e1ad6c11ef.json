{"ast":null,"code":"var _jsxFileName = \"/home/hamza/Desktop/MERN/React/weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, setState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport WeatherDay from \"./components/WeatherDay\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const LOCATION_KEY = \"217943_PC\";\n  const API_KEY = \"ZBBuYWWMVSw1woARtnVDGR97oVWNoZBY\";\n\n  const fixNum = num => {\n    let strNum = num + \"\";\n    const numLength = strNum.length;\n\n    if (numLength === 1) {\n      return \"0\" + strNum;\n    } else {\n      return strNum;\n    }\n  };\n\n  const [fiveDays, setfiveDays] = useState();\n  useEffect(() => {\n    fetch(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/locationKey=${LOCATION_KEY}?apikey=${API_KEY}`).then(res => res.json()).then(res => setfiveDays(res.DailyForecasts.map(fi => {\n      return {\n        date: fi.Date,\n        icon: fixNum(fi.Day.Icon),\n        status: fi.Day.IconPhrase,\n        max: fi.Temperature.Maximum.Value,\n        min: fi.Temperature.Minimum.Value\n      };\n    })));\n  }, []);\n  useEffect(() => {\n    console.log(fiveDays);\n  }, [fiveDays]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"main\",\n      children: !!fiveDays && fiveDays.map((f, index) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(WeatherDay, {\n          min: f.min,\n          max: f.max,\n          date: f.date,\n          icon: f.icon,\n          status: f.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"BZFUJREw+HGUCK6BH2SC4HgtWPM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hamza/Desktop/MERN/React/weather/src/App.js"],"names":["useEffect","useState","setState","Col","Container","Row","WeatherDay","App","LOCATION_KEY","API_KEY","fixNum","num","strNum","numLength","length","fiveDays","setfiveDays","fetch","then","res","json","DailyForecasts","map","fi","date","Date","icon","Day","Icon","status","IconPhrase","max","Temperature","Maximum","Value","min","Minimum","console","log","f","index"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,aAAP;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,YAAY,GAAG,WAArB;AACA,QAAMC,OAAO,GAAG,kCAAhB;;AAEA,QAAMC,MAAM,GAAIC,GAAD,IAAS;AACtB,QAAIC,MAAM,GAAGD,GAAG,GAAG,EAAnB;AACA,UAAME,SAAS,GAAGD,MAAM,CAACE,MAAzB;;AACA,QAAID,SAAS,KAAK,CAAlB,EAAqB;AACnB,aAAO,MAAMD,MAAb;AACD,KAFD,MAEO;AACL,aAAOA,MAAP;AACD;AACF,GARD;;AASA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,KAAK,CACF,0EAAyET,YAAa,WAAUC,OAAQ,EADtG,CAAL,CAGGS,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISC,GAAD,IACJH,WAAW,CACTG,GAAG,CAACE,cAAJ,CAAmBC,GAAnB,CAAwBC,EAAD,IAAQ;AAC7B,aAAO;AACLC,QAAAA,IAAI,EAAED,EAAE,CAACE,IADJ;AAELC,QAAAA,IAAI,EAAEhB,MAAM,CAACa,EAAE,CAACI,GAAH,CAAOC,IAAR,CAFP;AAGLC,QAAAA,MAAM,EAAEN,EAAE,CAACI,GAAH,CAAOG,UAHV;AAILC,QAAAA,GAAG,EAAER,EAAE,CAACS,WAAH,CAAeC,OAAf,CAAuBC,KAJvB;AAKLC,QAAAA,GAAG,EAAEZ,EAAE,CAACS,WAAH,CAAeI,OAAf,CAAuBF;AALvB,OAAP;AAOD,KARD,CADS,CALf;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBAlC,EAAAA,SAAS,CAAC,MAAM;AACdqC,IAAAA,OAAO,CAACC,GAAR,CAAYvB,QAAZ;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACG,CAAC,CAACA,QAAF,IACCA,QAAQ,CAACO,GAAT,CAAa,CAACiB,CAAD,EAAIC,KAAJ,kBACX,QAAC,GAAD;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,GAAG,EAAED,CAAC,CAACJ,GADT;AAEE,UAAA,GAAG,EAAEI,CAAC,CAACR,GAFT;AAGE,UAAA,IAAI,EAAEQ,CAAC,CAACf,IAHV;AAIE,UAAA,IAAI,EAAEe,CAAC,CAACb,IAJV;AAKE,UAAA,MAAM,EAAEa,CAAC,CAACV;AALZ;AAAA;AAAA;AAAA;AAAA;AADF,SAAUW,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAxDD;;GAAMjC,G;;KAAAA,G;AA0DN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState, setState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport WeatherDay from \"./components/WeatherDay\";\nimport \"./style.css\";\nconst App = () => {\n  const LOCATION_KEY = \"217943_PC\";\n  const API_KEY = \"ZBBuYWWMVSw1woARtnVDGR97oVWNoZBY\";\n\n  const fixNum = (num) => {\n    let strNum = num + \"\";\n    const numLength = strNum.length;\n    if (numLength === 1) {\n      return \"0\" + strNum;\n    } else {\n      return strNum;\n    }\n  };\n  const [fiveDays, setfiveDays] = useState();\n  useEffect(() => {\n    fetch(\n      `http://dataservice.accuweather.com/forecasts/v1/daily/5day/locationKey=${LOCATION_KEY}?apikey=${API_KEY}`\n    )\n      .then((res) => res.json())\n      .then((res) =>\n        setfiveDays(\n          res.DailyForecasts.map((fi) => {\n            return {\n              date: fi.Date,\n              icon: fixNum(fi.Day.Icon),\n              status: fi.Day.IconPhrase,\n              max: fi.Temperature.Maximum.Value,\n              min: fi.Temperature.Minimum.Value,\n            };\n          })\n        )\n      );\n  }, []);\n\n  useEffect(() => {\n    console.log(fiveDays);\n  }, [fiveDays]);\n\n  return (\n    <Container>\n      <Row className=\"main\">\n        {!!fiveDays &&\n          fiveDays.map((f, index) => (\n            <Col key={index}>\n              <WeatherDay\n                min={f.min}\n                max={f.max}\n                date={f.date}\n                icon={f.icon}\n                status={f.status}\n              />\n            </Col>\n          ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}